name: Deploy to Environment

on:
  push:
    branches:
      - master
      - 'feature/job-interview-task'

env:
  TF_DIR: terraform/kind

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_DIR }}

      - name: set branch name 
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
        if: github.event_name == 'push'

      - name: Set branch name for PR
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF//\//-}" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'

      - name: Terraform Destroy
        run: terraform destroy -var="name=$BRANCH_NAME" -auto-approve
        working-directory: ${{ env.TF_DIR }}

      - name: Terraform Apply
        run: |
          terraform apply -var="name=$BRANCH_NAME" -auto-approve
        working-directory: ${{ env.TF_DIR }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: create argocd namespace
        run: kubectl create namespace argocd

      - name: argocd workload
        run: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      - name: port forwarding
        run: kubectl -n argocd port-forward svc/argocd-server -n argocd 8083:80

      # - name: get secret 
      #   run: kubectl -n argocd get secrets argocd-initial-admin-secret -o json

      - name: Deploy environment frontend, backend and traefik
        run: |
          mkdir -p argocd/apps/${BRANCH_NAME}
          cp -r argocd/apps/dev argocd/apps/${BRANCH_NAME}
          kubectl apply -f argocd/apps/${BRANCH_NAME}/

      - name: Deploy environment addons
        run: kubectl apply -f argocd/apps/${BRANCH_NAME}/addons/

      - name: Terraform Destroy
        if: ${{ github.event.pull_request.merged }}
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TF_DIR }}

